from bidict import bidict


pairs_to_num_bidict = bidict({(7, 3): 27, (1, 3): 44, (3, 0): 7, (5, 4): 15, (2, 1): 41, (6, 2): 21, (5, 1): 17, (2, 5): 38, (0, 3): 3, (7, 2): 26, (4, 0): 31, (1, 2): 45, (5, 5): 14, (4, 4): 32, (6, 3): 20, (1, 5): 42, (5, 0): 16, (0, 4): 4, (3, 3): 11, (5, 3): 12, (4, 1): 30, (1, 1): 46, (6, 4): 19, (3, 2): 10, (0, 0): 0, (7, 1): 25, (4, 5): 33, (2, 2): 37, (6, 0): 23, (1, 4): 43, (7, 5): 29, (0, 5): 5, (4, 2): 34, (1, 0): 47, (6, 5): 18, (3, 5): 9, (0, 1): 1, (7, 0): 24, (5, 2): 13, (6, 1): 22, (3, 1): 6, (2, 4): 39, (7, 4): 28, (2, 0): 40, (4, 3): 35, (2, 3): 36, (3, 4): 8, (0, 2): 2})


pairs_to_perm_bidict = bidict({(7, 3): (7, 3, 6, 2, 5, 1, 4, 0), (1, 3): (1, 5, 0, 4, 3, 7, 2, 6), (3, 0): (3, 2, 1, 0, 7, 6, 5, 4), (5, 4): (5, 7, 1, 3, 4, 6, 0, 2), (2, 1): (2, 0, 3, 1, 6, 4, 7, 5), (6, 2): (6, 7, 2, 3, 4, 5, 0, 1), (5, 1): (5, 7, 4, 6, 1, 3, 0, 2), (2, 5): (2, 6, 0, 4, 3, 7, 1, 5), (0, 3): (0, 4, 1, 5, 2, 6, 3, 7), (7, 2): (7, 6, 3, 2, 5, 4, 1, 0), (4, 0): (4, 5, 6, 7, 0, 1, 2, 3), (1, 2): (1, 0, 5, 4, 3, 2, 7, 6), (5, 5): (5, 1, 7, 3, 4, 0, 6, 2), (4, 4): (4, 6, 0, 2, 5, 7, 1, 3), (6, 3): (6, 2, 7, 3, 4, 0, 5, 1), (1, 5): (1, 5, 3, 7, 0, 4, 2, 6), (5, 0): (5, 4, 7, 6, 1, 0, 3, 2), (0, 4): (0, 2, 4, 6, 1, 3, 5, 7), (3, 3): (3, 7, 2, 6, 1, 5, 0, 4), (5, 3): (5, 1, 4, 0, 7, 3, 6, 2), (4, 1): (4, 6, 5, 7, 0, 2, 1, 3), (1, 1): (1, 3, 0, 2, 5, 7, 4, 6), (6, 4): (6, 4, 2, 0, 7, 5, 3, 1), (3, 2): (3, 2, 7, 6, 1, 0, 5, 4), (0, 0): (0, 1, 2, 3, 4, 5, 6, 7), (7, 1): (7, 5, 6, 4, 3, 1, 2, 0), (4, 5): (4, 0, 6, 2, 5, 1, 7, 3), (2, 2): (2, 3, 6, 7, 0, 1, 4, 5), (6, 0): (6, 7, 4, 5, 2, 3, 0, 1), (1, 4): (1, 3, 5, 7, 0, 2, 4, 6), (7, 5): (7, 3, 5, 1, 6, 2, 4, 0), (0, 5): (0, 4, 2, 6, 1, 5, 3, 7), (4, 2): (4, 5, 0, 1, 6, 7, 2, 3), (1, 0): (1, 0, 3, 2, 5, 4, 7, 6), (6, 5): (6, 2, 4, 0, 7, 3, 5, 1), (3, 5): (3, 7, 1, 5, 2, 6, 0, 4), (0, 1): (0, 2, 1, 3, 4, 6, 5, 7), (7, 0): (7, 6, 5, 4, 3, 2, 1, 0), (5, 2): (5, 4, 1, 0, 7, 6, 3, 2), (6, 1): (6, 4, 7, 5, 2, 0, 3, 1), (3, 1): (3, 1, 2, 0, 7, 5, 6, 4), (2, 4): (2, 0, 6, 4, 3, 1, 7, 5), (7, 4): (7, 5, 3, 1, 6, 4, 2, 0), (2, 0): (2, 3, 0, 1, 6, 7, 4, 5), (4, 3): (4, 0, 5, 1, 6, 2, 7, 3), (2, 3): (2, 6, 3, 7, 0, 4, 1, 5), (3, 4): (3, 1, 7, 5, 2, 0, 6, 4), (0, 2): (0, 1, 4, 5, 2, 3, 6, 7)})


det_negative = [
    [False,  True,  True, False, False,  True],
    [ True, False, False,  True,  True, False],
    [ True, False, False,  True,  True, False],
    [False,  True,  True, False, False,  True],
    [ True, False, False,  True,  True, False],
    [False,  True,  True, False, False,  True],
    [False,  True,  True, False, False,  True],
    [ True, False, False,  True,  True, False]
]



# conjugacy classes for elements of the chiral octahedral group O as shown in https://commons.wikimedia.org/wiki/File:Symmetric_group_S4;_conjugacy_table.svg
# A: neutral (1+1+1+1)
# B: white bold (2+2)
# C: white (3+1)
# D: green (2+1+1)
# E: orange (4)
# The lower case letters are the equivalents for inversions of elements of O.
subgroup_name_to_tuple_bidict = bidict({

    # 48    1A 3B 8C 6D 6E 1a 3b 8c 6d 6e
    'S4xC2': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47),

    # 24    1A 3B 8C 6D 6E
    'S4 green orange': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23),

    # 24    1A 3B 8C 6d 6e
    'S4 blue red': (0, 3, 4, 7, 8, 11, 12, 15, 16, 19, 20, 23, 25, 26, 29, 30, 33, 34, 37, 38, 41, 42, 45, 46),

    # 24    1A 3B 8C 1a 3b 8c
    'A4xC2': (0, 3, 4, 7, 8, 11, 12, 15, 16, 19, 20, 23, 24, 27, 28, 31, 32, 35, 36, 39, 40, 43, 44, 47),

    # 16    1A 3B 2D 2E 1a 3b 2d 2e
    'Dih4xC2 07': (0, 1, 6, 7, 16, 17, 22, 23, 24, 25, 30, 31, 40, 41, 46, 47),
    'Dih4xC2 16': (0, 5, 7, 9, 14, 16, 18, 23, 24, 29, 31, 33, 38, 40, 42, 47),
    'Dih4xC2 23': (0, 2, 7, 10, 13, 16, 21, 23, 24, 26, 31, 34, 37, 40, 45, 47),

    # 12    1A 3B 8C
    'A4': (0, 3, 4, 7, 8, 11, 12, 15, 16, 19, 20, 23),

    # 12    1A 2C 3D 1a 2c 3d
    'Dih6 03': (0, 1, 2, 3, 4, 5, 24, 25, 26, 27, 28, 29),
    'Dih6 08': (0, 2, 6, 8, 12, 14, 24, 26, 30, 32, 36, 38),
    'Dih6 11': (0, 5, 6, 11, 19, 21, 24, 29, 30, 35, 43, 45),
    'Dih6 15': (0, 1, 14, 15, 20, 21, 24, 25, 38, 39, 44, 45),

    # 8    1A 3B 1a 3b
    'C2^3 white': (0, 7, 16, 23, 24, 31, 40, 47),
    # 8    1A 1B 2D 1a 1b 2d
    'C2^3 green 07': (0, 1, 6, 7, 24, 25, 30, 31),
    'C2^3 green 16': (0, 5, 14, 16, 24, 29, 38, 40),
    'C2^3 green 23': (0, 2, 21, 23, 24, 26, 45, 47),

    # 8    1A 1B 2E 1a 1b 2e
    'C4xC2 07': (0, 7, 17, 22, 24, 31, 41, 46),
    'C4xC2 16': (0, 9, 16, 18, 24, 33, 40, 42),
    'C4xC2 23': (0, 10, 13, 23, 24, 34, 37, 47),

    # 8    1A 1B 2E 2b 2d
    'Dih4 blue orange 07': (0, 7, 17, 22, 25, 30, 40, 47),
    'Dih4 blue orange 16': (0, 9, 16, 18, 29, 31, 38, 47),
    'Dih4 blue orange 23': (0, 10, 13, 23, 26, 31, 40, 45),
    # 8    1A 3B 2d 2e
    'Dih4 blue red 07': (0, 7, 16, 23, 25, 30, 41, 46),
    'Dih4 blue red 16': (0, 7, 16, 23, 29, 33, 38, 42),
    'Dih4 blue red 23': (0, 7, 16, 23, 26, 34, 37, 45),
    # 8    1A 3B 2D 2E
    'Dih4 green orange 07': (0, 1, 6, 7, 16, 17, 22, 23),
    'Dih4 green orange 16': (0, 5, 7, 9, 14, 16, 18, 23),
    'Dih4 green orange 23': (0, 2, 7, 10, 13, 16, 21, 23),
    # 8    1A 1B 2D 2b 2e
    'Dih4 green red 07': (0, 1, 6, 7, 40, 41, 46, 47),
    'Dih4 green red 16': (0, 5, 14, 16, 31, 33, 42, 47),
    'Dih4 green red 23': (0, 2, 21, 23, 31, 34, 37, 40),

    # 6    1A 2C 1a 2c
    'C6 03': (0, 3, 4, 24, 27, 28),
    'C6 08': (0, 8, 12, 24, 32, 36),
    'C6 11': (0, 11, 19, 24, 35, 43),
    'C6 15': (0, 15, 20, 24, 39, 44),

    # 6    1A 2C 3D
    'S3 green 03': (0, 1, 2, 3, 4, 5),
    'S3 green 08': (0, 2, 6, 8, 12, 14),
    'S3 green 11': (0, 5, 6, 11, 19, 21),
    'S3 green 15': (0, 1, 14, 15, 20, 21),
    # 6    1A 2C 3d
    'S3 blue 03': (0, 3, 4, 25, 26, 29),
    'S3 blue 08': (0, 8, 12, 26, 30, 38),
    'S3 blue 11': (0, 11, 19, 29, 30, 45),
    'S3 blue 15': (0, 15, 20, 25, 38, 45),

    # 4    1A 3B
    'V white': (0, 7, 16, 23),
    # 4    1A 1B 2D
    'V green white 07': (0, 1, 6, 7),
    'V green white 16': (0, 5, 14, 16),
    'V green white 23': (0, 2, 21, 23),
    # 4    1A 1B 2d
    'V blue white 07': (0, 7, 25, 30),
    'V blue white 16': (0, 16, 29, 38),
    'V blue white 23': (0, 23, 26, 45),
    # 4    1A 1D 1b 1d
    'V gby 01': (0, 1, 30, 31),
    'V gby 02': (0, 2, 45, 47),
    'V gby 05': (0, 5, 38, 40),
    'V gby 06': (0, 6, 25, 31),
    'V gby 14': (0, 14, 29, 40),
    'V gby 21': (0, 21, 26, 47),
    # 4    1A 1B 2b
    'V yellow white 07': (0, 7, 40, 47),
    'V yellow white 16': (0, 16, 31, 47),
    'V yellow white 23': (0, 23, 31, 40),
    # 4    1A 1B 1a 1b
    'V inv white 07': (0, 7, 24, 31),
    'V inv white 16': (0, 16, 24, 40),
    'V inv white 23': (0, 23, 24, 47),
    # 4    1A 1D 1a 1d
    'V inv green 01': (0, 1, 24, 25),
    'V inv green 02': (0, 2, 24, 26),
    'V inv green 05': (0, 5, 24, 29),
    'V inv green 06': (0, 6, 24, 30),
    'V inv green 14': (0, 14, 24, 38),
    'V inv green 21': (0, 21, 24, 45),

    # 4    1A 1B 2E
    'C4 orange 07': (0, 7, 17, 22),
    'C4 orange 16': (0, 9, 16, 18),
    'C4 orange 23': (0, 10, 13, 23),
    # 4    1A 1B 2e
    'C4 red 07': (0, 7, 41, 46),
    'C4 red 16': (0, 16, 33, 42),
    'C4 red 23': (0, 23, 34, 37),

    # 3    1A 2C
    'C3 03': (0, 3, 4),
    'C3 08': (0, 8, 12),
    'C3 11': (0, 11, 19),
    'C3 15': (0, 15, 20),

    # 2    1A 1B
    'C2 white 07': (0, 7),
    'C2 white 16': (0, 16),
    'C2 white 23': (0, 23),
    # 2    1A 1D
    'C2 green 01': (0, 1),
    'C2 green 02': (0, 2),
    'C2 green 05': (0, 5),
    'C2 green 06': (0, 6),
    'C2 green 14': (0, 14),
    'C2 green 21': (0, 21),
    # 2    1A 1a
    'C2 inv': (0, 24),
    # 2    1A 1b
    'C2 yellow 07': (0, 31),
    'C2 yellow 16': (0, 40),
    'C2 yellow 23': (0, 47),
    # 2    1A 1d
    'C2 blue 01': (0, 25),
    'C2 blue 02': (0, 26),
    'C2 blue 05': (0, 29),
    'C2 blue 06': (0, 30),
    'C2 blue 14': (0, 38),
    'C2 blue 21': (0, 45),

    # 1    1A
    'trivial': (0,),

})
